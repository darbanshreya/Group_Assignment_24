/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.Assignment;
import Model.Course;
import Model.Faculty;
import Model.GradeCalculator;
import Model.Student;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ravin
 */
public class GradingPanel extends javax.swing.JPanel {
private Faculty currentFaculty;
    private Course selectedCourse;
    private Student selectedStudent;
    private DefaultTableModel tableModel;
    /**
     * Creates new form GradingPanel
     */
    public GradingPanel(Faculty faculty) {
         this.currentFaculty = faculty;
        initComponents();
          setupTable();
        loadCourses();
    }
     private void setupTable() {
        tableModel = new DefaultTableModel(
            new String[]{"Assignment", "Max Points", "Student Score", "Percentage"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblAssignments.setModel(tableModel);
    }
       private void loadCourses() {
        cmbCourses.removeAllItems();
        for (Course course : currentFaculty.getAssignedCourses()) {
            cmbCourses.addItem(course.getCourseId() + " - " + course.getTitle());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblSelectCourse = new javax.swing.JLabel();
        cmbCourses = new javax.swing.JComboBox<>();
        lblSelectStudent = new javax.swing.JLabel();
        cmbStudents = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAssignments = new javax.swing.JTable();
        lblTotalPercentage = new javax.swing.JLabel();
        lblFinalGrade = new javax.swing.JLabel();
        btnGradeAssignment = new javax.swing.JButton();
        btnSaveFinalGrade = new javax.swing.JButton();

        lblTitle.setText("Grading Panel");

        lblSelectCourse.setText("Select course");

        cmbCourses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCoursesActionPerformed(evt);
            }
        });

        lblSelectStudent.setText("Select Student");

        cmbStudents.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStudentsActionPerformed(evt);
            }
        });

        tblAssignments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Assignments", "Max Points", "Student Score", "Percentage"
            }
        ));
        jScrollPane1.setViewportView(tblAssignments);

        lblTotalPercentage.setText("Total Percentage");

        lblFinalGrade.setText("Final Grade");

        btnGradeAssignment.setText("Grade Assignment");
        btnGradeAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGradeAssignmentActionPerformed(evt);
            }
        });

        btnSaveFinalGrade.setText("Save Final Grade");
        btnSaveFinalGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFinalGradeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSelectCourse)
                                    .addComponent(lblSelectStudent))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotalPercentage)
                            .addComponent(lblFinalGrade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGradeAssignment)
                            .addComponent(btnSaveFinalGrade))
                        .addGap(36, 36, 36)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCourse)
                    .addComponent(cmbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectStudent)
                    .addComponent(cmbStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalPercentage)
                    .addComponent(btnGradeAssignment))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFinalGrade)
                    .addComponent(btnSaveFinalGrade))
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGradeAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGradeAssignmentActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblAssignments.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Please select an assignment", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    Assignment assignment = selectedCourse.getAssignments().get(selectedRow);
    String input = JOptionPane.showInputDialog(this, 
        "Enter score for " + assignment.getAssignmentName() + " (Max: " + assignment.getMaxPoints() + "):");
    
    if (input != null && !input.trim().isEmpty()) {
        try {
            double score = Double.parseDouble(input.trim());
            if (score < 0 || score > assignment.getMaxPoints()) {
                JOptionPane.showMessageDialog(this, "Score must be between 0 and " + assignment.getMaxPoints(), 
                    "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
                 assignment.setScore(selectedStudent.getStudentId(), score);
            loadAssignmentTable(); // Refresh table
            JOptionPane.showMessageDialog(this, "Score saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid score format", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnGradeAssignmentActionPerformed

    private void btnSaveFinalGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFinalGradeActionPerformed
        // TODO add your handling code here:
         if (selectedCourse == null || selectedStudent == null) {
        JOptionPane.showMessageDialog(this, "Please select a course and student", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    double percentage = GradeCalculator.calculateStudentTotalPercentage(selectedStudent, selectedCourse);
    String letterGrade = GradeCalculator.calculateLetterGrade(percentage);
    
    selectedStudent.setGradeForCourse(selectedCourse.getCourseId(), letterGrade);
    
    JOptionPane.showMessageDialog(this, 
        String.format("Final grade %s (%.2f%%) saved for %s", letterGrade, percentage, selectedStudent.getName()),
        "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSaveFinalGradeActionPerformed

    private void cmbCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCoursesActionPerformed
        // TODO add your handling code here:
           int index = cmbCourses.getSelectedIndex();
    if (index >= 0) {
        selectedCourse = currentFaculty.getAssignedCourses().get(index);
        loadStudentComboBox();
    }
    }
    private void loadStudentComboBox() {
    cmbStudents.removeAllItems();
    if (selectedCourse != null) {
        for (Student student : selectedCourse.getEnrolledStudents()) {
            cmbStudents.addItem(student.getName() + " (" + student.getStudentId() + ")");
        }
    }
    }//GEN-LAST:event_cmbCoursesActionPerformed

    private void cmbStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStudentsActionPerformed
        // TODO add your handling code here:
            int index = cmbStudents.getSelectedIndex();
    if (index >= 0 && selectedCourse != null) {
        selectedStudent = selectedCourse.getEnrolledStudents().get(index);
        loadAssignmentTable();
    }
}
    private void loadAssignmentTable() {
    tableModel = (DefaultTableModel) tblAssignments.getModel();
    tableModel.setRowCount(0);
    
    if (selectedCourse != null && selectedStudent != null) {
        for (Assignment assignment : selectedCourse.getAssignments()) {
            double score = assignment.getScore(selectedStudent.getStudentId());
            double percentage = (score / assignment.getMaxPoints()) * 100;
            
            tableModel.addRow(new Object[]{
                assignment.getAssignmentName(),
                assignment.getMaxPoints(),
                score,
                String.format("%.2f%%", percentage)
            });
        }
        
        updateTotalGrade();
    }
}
    private void updateTotalGrade() {
    if (selectedCourse != null && selectedStudent != null) {
        double percentage = GradeCalculator.calculateStudentTotalPercentage(selectedStudent, selectedCourse);
        String letterGrade = GradeCalculator.calculateLetterGrade(percentage);
        
        lblTotalPercentage.setText(String.format("Total Percentage: %.2f%%", percentage));
        lblFinalGrade.setText("Final Grade: " + letterGrade);
    }
    }//GEN-LAST:event_cmbStudentsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGradeAssignment;
    private javax.swing.JButton btnSaveFinalGrade;
    private javax.swing.JComboBox<String> cmbCourses;
    private javax.swing.JComboBox<String> cmbStudents;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFinalGrade;
    private javax.swing.JLabel lblSelectCourse;
    private javax.swing.JLabel lblSelectStudent;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalPercentage;
    private javax.swing.JTable tblAssignments;
    // End of variables declaration//GEN-END:variables
}
