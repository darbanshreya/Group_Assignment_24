/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.Course;
import Model.Faculty;
import Model.GradeCalculator;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ravin
 */
public class PerformanceReportPanel extends javax.swing.JPanel {
 private Faculty currentFaculty;
    private Course selectedCourse;
    private DefaultTableModel tableModel;
    /**
     * Creates new form PerformanceReportPanel
     */
    public PerformanceReportPanel(Faculty faculty) {
        this.currentFaculty = faculty;
        initComponents();
         setupTable();
        loadCourses();
        loadSemesters();
    }
     private void setupTable() {
        tableModel = new DefaultTableModel(
            new String[]{"Grade", "Count"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblGradeDistribution.setModel(tableModel);
    }
      private void loadCourses() {
        cmbCourses.removeAllItems();
        for (Course course : currentFaculty.getAssignedCourses()) {
            cmbCourses.addItem(course.getCourseId() + " - " + course.getTitle());
        }
    }
      private void loadSemesters() {
        cmbSemester.addItem("All");
        cmbSemester.addItem("Fall 2024");
        cmbSemester.addItem("Spring 2025");
        cmbSemester.addItem("Fall 2025");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblSelectCourses = new javax.swing.JLabel();
        cmbCourses = new javax.swing.JComboBox<>();
        lblSemester = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox<>();
        lblAverageGrade = new javax.swing.JLabel();
        lblEnrollmentCount = new javax.swing.JLabel();
        lblTuitionCollected = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGradeDistribution = new javax.swing.JTable();
        btnGenerateReport = new javax.swing.JButton();
        btnExportReport = new javax.swing.JButton();

        lblTitle.setText("Performance Report");

        lblSelectCourses.setText("Select Courses");

        cmbCourses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCoursesActionPerformed(evt);
            }
        });

        lblSemester.setText("Filter By Semester");

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Fall 2024", "Spring 2025" }));

        lblAverageGrade.setText("Average Grade");

        lblEnrollmentCount.setText("Enrollment Count");

        lblTuitionCollected.setText("Tuition Collected ");

        tblGradeDistribution.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Grade", "Count"
            }
        ));
        jScrollPane1.setViewportView(tblGradeDistribution);

        btnGenerateReport.setText("Generate Report");
        btnGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateReportActionPerformed(evt);
            }
        });

        btnExportReport.setText("Export Report");
        btnExportReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAverageGrade)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSelectCourses)
                                .addComponent(lblSemester))
                            .addComponent(lblEnrollmentCount)
                            .addComponent(lblTuitionCollected))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnGenerateReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportReport)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCourses)
                    .addComponent(cmbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(lblAverageGrade)
                .addGap(18, 18, 18)
                .addComponent(lblEnrollmentCount)
                .addGap(26, 26, 26)
                .addComponent(lblTuitionCollected)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateReport)
                    .addComponent(btnExportReport))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCoursesActionPerformed
        // TODO add your handling code here:
         int index = cmbCourses.getSelectedIndex();
    if (index >= 0) {
        selectedCourse = currentFaculty.getAssignedCourses().get(index);
    }
    }//GEN-LAST:event_cmbCoursesActionPerformed

    private void btnGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateReportActionPerformed
        // TODO add your handling code here:
         if (selectedCourse == null) {
        JOptionPane.showMessageDialog(this, "Please select a course", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    String selectedSemester = (String) cmbSemester.getSelectedItem();
    if (!selectedSemester.equals("All") && !selectedCourse.getSemester().equals(selectedSemester)) {
        JOptionPane.showMessageDialog(this, "No data for selected semester", "Info", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    // Calculate metrics
    double avgGrade = GradeCalculator.calculateClassAverageGrade(selectedCourse);
    int enrollmentCount = selectedCourse.getEnrolledCount();
    double tuitionCollected = selectedCourse.getTotalTuitionCollected();
    
    // Update labels
    lblAverageGrade.setText(String.format("Average Grade: %.2f%%", avgGrade));
    lblEnrollmentCount.setText("Enrollment Count: " + enrollmentCount);
    lblTuitionCollected.setText(String.format("Tuition Collected: $%.2f", tuitionCollected));
    
    // Load grade distribution table
    Map<String, Integer> distribution = GradeCalculator.calculateGradeDistribution(selectedCourse);
    tableModel = (DefaultTableModel) tblGradeDistribution.getModel();
    tableModel.setRowCount(0);
    
    for (Map.Entry<String, Integer> entry : distribution.entrySet()) {
        tableModel.addRow(new Object[]{entry.getKey(), entry.getValue()});
    }

    }//GEN-LAST:event_btnGenerateReportActionPerformed

    private void btnExportReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportReportActionPerformed
        // TODO add your handling code here:
         if (selectedCourse == null) {
        JOptionPane.showMessageDialog(this, "Please generate a report first", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Save Report");
    fileChooser.setSelectedFile(new File("report_" + selectedCourse.getCourseId() + ".txt"));
    int result = fileChooser.showSaveDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        try (PrintWriter writer = new PrintWriter(fileChooser.getSelectedFile())) {
            writer.println("Performance Report");
            writer.println("Course: " + selectedCourse.getTitle());
            writer.println("Course ID: " + selectedCourse.getCourseId());
            writer.println("Semester: " + selectedCourse.getSemester());
            writer.println("\nMetrics:");
            writer.println("Average Grade: " + lblAverageGrade.getText().split(": ")[1]);
            writer.println("Enrollment Count: " + lblEnrollmentCount.getText().split(": ")[1]);
            writer.println("Tuition Collected: " + lblTuitionCollected.getText().split(": ")[1]);
            writer.println("\nGrade Distribution:");
            
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                writer.println(tableModel.getValueAt(i, 0) + ": " + tableModel.getValueAt(i, 1));
            }
            JOptionPane.showMessageDialog(this, "Report exported successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error exporting report: " + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnExportReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportReport;
    private javax.swing.JButton btnGenerateReport;
    private javax.swing.JComboBox<String> cmbCourses;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAverageGrade;
    private javax.swing.JLabel lblEnrollmentCount;
    private javax.swing.JLabel lblSelectCourses;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTuitionCollected;
    private javax.swing.JTable tblGradeDistribution;
    // End of variables declaration//GEN-END:variables
}
